services:

  db:
    image: postgres:15-alpine
    volumes:
      - /var/lib/postgresql/data
    healthcheck :
      test: [ "CMD", "pg_isready", "-q", "-d", "postgres", "-U", "postgres" ]
      interval : 2s
      timeout : 2s
      retries : 10
    env_file:
      - config.env
    restart: always

  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    command: >
      sh -c "python manage.py wait_for_db
      && python manage.py runserver 0.0.0.0:8001"
    volumes:
      - ./app:/app
    ports:
      - "8001:8001"
    env_file:
      - config.env
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      db:
        condition: service_healthy
    tty: true  # Provide color in the console
    restart: always

  test:
    build:
      context: .
      dockerfile: Dockerfile.test
    profiles:
      - certifications
    volumes:
      - ./app:/app
      - ./coverage:/coverage
    env_file:
      - config.env
    depends_on:
      db:
        condition: service_healthy
    tty: true  # Provide color in the console
    restart: always
