from typing import Any

from .formats.base_formats import DEFAULT_FORMATS as DEFAULT_FORMATS
from .forms import ConfirmImportForm as ConfirmImportForm, ExportForm as ExportForm, ImportExportFormBase as ImportExportFormBase, ImportForm as ImportForm, export_action_form_factory as export_action_form_factory
from .mixins import BaseExportMixin as BaseExportMixin, BaseImportMixin as BaseImportMixin
from .results import RowResult as RowResult
from .signals import post_export as post_export, post_import as post_import
from .tmp_storages import MediaStorage as MediaStorage, TempFolderStorage as TempFolderStorage
from .utils import original as original
from django.contrib import admin

logger: Any

class ImportExportMixinBase:
    def __init__(self, *args: Any, **kwargs: Any) -> None: ...
    base_change_list_template: Any
    change_list_template: Any
    def init_change_list_template(self) -> None: ...
    def get_model_info(self) -> Any: ...
    def changelist_view(self, request: Any, extra_context: Any | None = ...) -> Any: ...

class ImportMixin(BaseImportMixin, ImportExportMixinBase):
    import_export_change_list_template: str
    import_template_name: str
    formats = DEFAULT_FORMATS
    import_form_class = ImportForm
    confirm_form_class = ConfirmImportForm
    from_encoding: str
    skip_admin_log: Any
    tmp_storage_class: Any
    def get_skip_admin_log(self) -> Any: ...
    def get_tmp_storage_class(self) -> Any: ...
    def has_import_permission(self, request: Any) -> Any: ...
    def get_urls(self) -> Any: ...
    def process_import(self, request: Any, *args: Any, **kwargs: Any) -> Any: ...
    def process_dataset(self, dataset: Any, confirm_form: Any, request: Any, *args: Any, rollback_on_validation_errors: bool = ..., **kwargs: Any) -> Any: ...
    def process_result(self, result: Any, request: Any) -> Any: ...
    def generate_log_entries(self, result: Any, request: Any) -> None: ...
    def add_success_message(self, result: Any, request: Any) -> None: ...
    def get_import_context_data(self, **kwargs: Any) -> Any: ...
    def get_context_data(self, **kwargs: Any) -> Any: ...
    def get_import_form(self) -> Any: ...
    def get_confirm_import_form(self) -> Any: ...
    def get_form_kwargs(self, form: Any, *args: Any, **kwargs: Any) -> Any: ...
    def create_import_form(self, request: Any) -> Any: ...
    def get_import_form_class(self, request: Any) -> Any: ...
    def get_import_form_kwargs(self, request: Any) -> Any: ...
    def get_import_form_initial(self, request: Any) -> Any: ...
    def create_confirm_form(self, request: Any, import_form: Any | None = ...) -> Any: ...
    def get_confirm_form_class(self, request: Any) -> Any: ...
    def get_confirm_form_kwargs(self, request: Any, import_form: Any | None = ...) -> Any: ...
    def get_confirm_form_initial(self, request: Any, import_form: Any) -> Any: ...
    def get_import_data_kwargs(self, request: Any, *args: Any, **kwargs: Any) -> Any: ...
    def write_to_tmp_storage(self, import_file: Any, input_format: Any) -> Any: ...
    def add_data_read_fail_error_to_form(self, form: Any, e: Any) -> None: ...
    def import_action(self, request: Any, *args: Any, **kwargs: Any) -> Any: ...
    def changelist_view(self, request: Any, extra_context: Any | None = ...) -> Any: ...

class ExportMixin(BaseExportMixin, ImportExportMixinBase):
    import_export_change_list_template: str
    export_template_name: str
    to_encoding: Any
    export_form_class = ExportForm
    def get_urls(self) -> Any: ...
    def has_export_permission(self, request: Any) -> Any: ...
    def get_export_queryset(self, request: Any) -> Any: ...
    def get_export_data(self, file_format: Any, queryset: Any, *args: Any, **kwargs: Any) -> Any: ...
    def get_export_context_data(self, **kwargs: Any) -> Any: ...
    def get_context_data(self, **kwargs: Any) -> Any: ...
    def get_export_form(self) -> Any: ...
    def get_export_form_class(self) -> Any: ...
    def export_action(self, request: Any, *args: Any, **kwargs: Any) -> Any: ...
    def changelist_view(self, request: Any, extra_context: Any | None = ...) -> Any: ...
    def get_export_filename(self, file_format: Any) -> Any: ...

class ImportExportMixin(ImportMixin, ExportMixin):
    import_export_change_list_template: str

class ImportExportModelAdmin(ImportExportMixin, admin.ModelAdmin): ...

class ExportActionMixin(ExportMixin):
    import_export_change_list_template: Any
    action_form: Any
    def __init__(self, *args: Any, **kwargs: Any) -> None: ...
    def export_admin_action(self, request: Any, queryset: Any) -> Any: ...
    def get_actions(self, request: Any) -> Any: ...
    @property
    def media(self) -> Any: ...

class ExportActionModelAdmin(ExportActionMixin, admin.ModelAdmin): ...
class ImportExportActionModelAdmin(ImportMixin, ExportActionModelAdmin): ...
