from typing import Any

from .formats import base_formats as base_formats
from .forms import ExportForm as ExportForm
from .resources import modelresource_factory as modelresource_factory
from .signals import post_export as post_export
from django.views.generic.edit import FormView

logger: Any

class BaseImportExportMixin:
    formats: Any
    resource_class: Any
    resource_classes: Any
    def check_resource_classes(self, resource_classes: Any) -> None: ...
    def get_resource_classes(self) -> Any: ...
    def get_resource_kwargs(self, request: Any, *args: Any, **kwargs: Any) -> Any: ...
    def get_resource_index(self, form: Any) -> Any: ...

class BaseImportMixin(BaseImportExportMixin):
    def get_import_resource_classes(self) -> Any: ...
    def get_import_formats(self) -> Any: ...
    def get_import_resource_kwargs(self, request: Any, *args: Any, **kwargs: Any) -> Any: ...
    def choose_import_resource_class(self, form: Any) -> Any: ...

class BaseExportMixin(BaseImportExportMixin):
    model: Any
    escape_exported_data: bool
    escape_html: bool
    escape_formulae: bool
    @property
    def should_escape_output(self) -> Any: ...
    @property
    def should_escape_html(self) -> Any: ...
    @property
    def should_escape_formulae(self) -> Any: ...
    def get_export_formats(self) -> Any: ...
    def get_export_resource_classes(self) -> Any: ...
    def choose_export_resource_class(self, form: Any) -> Any: ...
    def get_export_resource_kwargs(self, request: Any, *args: Any, **kwargs: Any) -> Any: ...
    def get_data_for_export(self, request: Any, queryset: Any, *args: Any, **kwargs: Any) -> Any: ...
    def get_export_filename(self, file_format: Any) -> Any: ...

class ExportViewMixin(BaseExportMixin):
    form_class = ExportForm
    def get_export_data(self, file_format: Any, queryset: Any, *args: Any, **kwargs: Any) -> Any: ...
    def get_context_data(self, **kwargs: Any) -> Any: ...
    def get_form_kwargs(self) -> Any: ...

#class ExportViewFormMixin(ExportViewMixin, FormView):
#    def form_valid(self, form: Any) -> Any: ...
